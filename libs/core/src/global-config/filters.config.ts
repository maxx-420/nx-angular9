// 9fbef606107a605d69c0edbcd8029e5d_SYMPHONY

import { FILTER_CONFIGURATIONS } from './config';

export const filtersList = {
  shipmentCreation_90DaysRange: {
    key: 'shipmentCreation',
    label: 'lbl_shipments_filter_createdOn',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 90,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: false,
  },
  pickup_90DaysRange: {
    key: 'pickup',
    label: 'lbl_shipment_movement_pickup',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 90,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: false,
  },
  scheduleDelivery: {
    key: 'scheduleDelivery',
    label: 'lbl_shipment_detailsScheduledDelivery',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 90,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: true,
  },
  deliveryETA_90DaysRange: {
    key: 'deliveryETA',
    label: 'lbl_shipment_deliveryETA',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 90,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: true,
  },
  milestone: {
    key: 'status',
    label: 'lbl_shipment_milestone',
    options: [],
    filterType: 'milestone',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    showSelection: false,
    clearSelection: false,
    allowFutureDates: false,
    hasDeliveryStatus: true,
  },
  origin: {
    key: 'origin',
    label: 'lbl_shipment_origin',
    options: [],
    filterType: 'select-dropdown',
    placeholder: 'lbl_shipment_selectOrigin',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    showSelection: false,
    showPlaceholderAsOption: true,
    clearSelection: false,
    allowFutureDates: false,
    isDataLoaded: false,
  },
  destination: {
    key: 'destination',
    label: 'lbl_shipment_destination',
    options: [],
    filterType: 'select-dropdown',
    placeholder: 'lbl_shipment_selectDestination',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    showSelection: false,
    showPlaceholderAsOption: true,
    clearSelection: false,
    allowFutureDates: false,
    isDataLoaded: false,
  },
  claims: {
    key: 'claims',
    label: 'lbl_shipment_l2_filterLabel_claims',
    options: ['With Claims', 'Without Claims'],
    filterType: 'multi-select-checkbox',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    showSelection: false,
    clearSelection: false,
    allowFutureDates: false,
  },
  shipmentCreation_120DaysRange: {
    key: 'shipmentCreation',
    label: 'lbl_shipments_filter_createdOn',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 120,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: false,
  },
  shipmentBooked: {
    key: 'shipmentBooked',
    label: 'lbl_shipments_filter_shipmentBooked',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 120,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: false,
  },
  pickup_120DaysRange: {
    key: 'pickup',
    label: 'lbl_shipment_movement_pickup',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 120,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: false,
  },
  estimatedDeparture: {
    key: 'estimatedDeparture',
    label: 'lbl_shipment_movement_estimatedDeparture',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 120,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: true,
  },
  estimatedArrival: {
    key: 'estimatedArrival',
    label: 'lbl_shipment_movement_estimatedArrival',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 120,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: true,
  },
  deliveryETA_120DaysRange: {
    key: 'deliveryETA',
    label: 'lbl_shipment_deliveryETA',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 120,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: true,
  },
  actualDelivery: {
    key: 'actualDelivery',
    label: 'lbl_shipment_actualDelivery',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 120,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: true,
  },
  shipped: {
    key: 'shipped',
    label: 'lbl_shipments_filter_shipped',
    options: FILTER_CONFIGURATIONS.dateFilterOptions.map((elem) => ({
      value: elem.value,
      label: elem.viewValue,
      isCmsLabel: true,
    })),
    filterType: 'dateRange',
    errorMessage: '',
    defaultValue: null,
    defaultStartDate: null,
    defaultEndDate: null,
    minDateRange: 90,
    maxDateRangeDiff: 59,
    showSelection: true,
    clearSelection: true,
    allowFutureDates: true,
  },
};
